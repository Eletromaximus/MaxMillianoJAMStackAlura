{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport propToStyle from '../../theme/utils/propToStyle';\nimport React from 'react';\nimport typographyVariants from '../../theme/typographyVariants';\nvar smallestException = css([\"font-size:\", \";font-weight:\", \";line-height:\", \";\"], function () {\n  return typographyVariants.smallestException.fontSize;\n}, function () {\n  return typographyVariants.smallestException.fontWeight;\n}, function () {\n  return typographyVariants.smallestException.lineHeight;\n});\nvar paragraph1 = css([\"font-size:\", \";font-weight:\", \";line-height:\", \";\"], function () {\n  return typographyVariants.paragraph1.fontSize;\n}, function () {\n  return typographyVariants.paragraph1.fontWeight;\n}, function () {\n  return typographyVariants.paragraph1.lineHeight;\n});\nexport var TextStyleVariants = {\n  smallestException: smallestException,\n  paragraph1: paragraph1\n};\nvar TextBase = styled.span.withConfig({\n  displayName: \"Text__TextBase\",\n  componentId: \"sc-1a1ywx6-0\"\n})([\"\", \";\", \";\"], function (_ref) {\n  var variant = _ref.variant;\n  return TextStyleVariants[variant];\n}, propToStyle('textAlign'));\nexport default function Text(_ref2) {\n  var tag = _ref2.tag,\n      variant = _ref2.variant,\n      children = _ref2.children,\n      textAlign = _ref2.textAlign;\n  return /*#__PURE__*/_jsx(TextBase, {\n    as: tag,\n    variant: variant,\n    textAlign: textAlign,\n    children: children\n  });\n}\nText.prototype = {\n  tag: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\nText.defaultProps = {\n  tag: 'span',\n  variant: 'paragraph1'\n};","map":null,"metadata":{},"sourceType":"module"}